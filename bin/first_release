#!/usr/bin/env bash

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${YELLOW}Starting first release process...${NC}"

# Check if working directory is clean
if [[ -n $(git status -s) ]]; then
  echo -e "${RED}Error: Working directory is not clean. Please commit all changes first.${NC}"
  exit 1
fi

# Clean up any existing gem files
echo -e "\n${GREEN}Cleaning up...${NC}"
rm -f *.gem

# Reset version to 0.1.0
echo -e "\n${GREEN}Setting version to 0.1.0...${NC}"
cat > lib/git_oops/version.rb << EOL
# frozen_string_literal: true

module GitOops
  VERSION = "0.1.0"
end
EOL

# Commit version change
git add lib/git_oops/version.rb
git commit -m "Reset version to 0.1.0 for first release"

# Build and test
echo -e "\n${GREEN}Running tests...${NC}"
bundle exec rake spec

# Build gem
echo -e "\n${GREEN}Building gem...${NC}"
gem build git_oops.gemspec

# Create git tag
echo -e "\n${GREEN}Creating git tag v0.1.0...${NC}"
git tag -a "v0.1.0" -m "First release version 0.1.0"
git push origin "v0.1.0"

# Check if user has RubyGems credentials
if ! gem owner git_oops &>/dev/null; then
  echo -e "\n${YELLOW}You need to sign in to RubyGems to publish the gem.${NC}"
  echo -e "Please run: ${GREEN}gem signin${NC}"
  exit 1
fi

# Publish to RubyGems
echo -e "\n${GREEN}Publishing to RubyGems...${NC}"
gem push "git_oops-0.1.0.gem"

# Cleanup
echo -e "\n${GREEN}Cleaning up...${NC}"
rm "git_oops-0.1.0.gem"

echo -e "\n${GREEN}First release v0.1.0 completed successfully!${NC}"
echo -e "\nNext steps:"
echo -e "1. Update CHANGELOG.md"
echo -e "2. Push changes to GitHub: ${GREEN}git push origin main${NC}"
